% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wellmapr.R
\name{load}
\alias{load}
\title{Load a microplate layout from a TOML file.}
\usage{
load(
  toml_path,
  data_loader = NULL,
  merge_cols = NULL,
  path_guess = NULL,
  path_required = FALSE,
  meta = NULL,
  extras = NULL,
  report_dependencies = FALSE,
  on_alert = NULL
)
}
\arguments{
\item{toml_path}{The path to a file describing the layout of one or more plates.  See the
\href{https://wellmap.readthedocs.io/en/latest/file_format.html}{file format documentation}
for details about this file.}

\item{data_loader}{Indicates that \code{load()} should attempt to load the actual data associated
with the plate layout, in addition to loading the layout itself.  The
argument should be a function that takes a path to a data file (string),
parses it, and returns a data frame containing the parsed data.  The
function may also take an argument named "extras", in which case the
\code{extras} return value (described below) will be provided.  Note that
specifying a data loader implies that \code{path_required} is True.}

\item{merge_cols}{Indicates whether or not---and if so, how---\code{load()} should merge the data
frames representing the plate layout and the actual data (provided by
\code{data_loader}).  The argument can either be \code{NULL}, \code{TRUE}, or a named list:

If \code{NULL}, the data frames will be returned separately and not be merged.
This is the default behavior.

If \code{TRUE}, the data frames will be merged using any columns that share the
same name.  For example, the layout will always have a column named \emph{well},
so if the actual data also has a column named \emph{well}, the merge would happen
on those columns.

If a named list, If a named list, the data frames will be merged using the
columns identified in each key-value pair of the list.  The keys should be
column names from the data frame representing the plate layout (described
below; see the \code{layout} return value), and the values should be column names
from the data frame returned by \code{data_loader}.  Below are some examples of
this argument:
\itemize{
\item \code{list(well0 = 'Well')}: Indicates that the "Well" column in the data
contains zero-padded well names, like "A01", "A02", etc.
\item \code{list(row_i = 'Row', col_j = 'Col')}: Indicates that the 'Row' and 'Col'
columns in the data contain 0-indexed coordinates (e.g. 0, 1, 2, ...)
identifying each row and column, respectively.
}

Some details and caveats:
\itemize{
\item In order to successfully merge two columns, the values in those columns
must correspond exactly.  For example, a column that contains unpadded
well names like "A1" cannot be merged with a column that contains padded
well names like "A01".  This is why the \code{layout} data frame contains so
many redundant columns: to increase the chance that one will correspond
exactly with a column provided by the data.  In some cases, though, it may
be necessary for the \code{data_loader} function to construct an appropriate
merge column.
\item The data frame returned by \code{data_loader()} must be
\href{http://vita.had.co.nz/papers/tidy-data.html}{tidy}.  Briefly, a data
frame is tidy if each of its columns represents a single variable (e.g.
time, fluorescence) and each of its rows represents a single observation.
\item The \emph{path} column of the layout is automatically included in the merge and
never has to be specified (although it is not an error to do so).  The
reason for this special-case is that \code{load()} itself knows what path each
data frame was loaded from.
}}

\item{path_guess}{Where to look for a data file if none is specified in the given TOML file.
In other words, this is the default value for
\href{https://wellmap.readthedocs.io/en/latest/file_format.html#meta-path}{meta.path}.
This path is interpreted relative to the TOML file itself (unless it's an
absolute path) and is formatted in python with a \code{pathlib.Path} object
representing said TOML file.  In code, that would be:
\code{path_guess.format(Path(toml_path))}.  A typical value would be something
like \code{'{0.stem}.csv'}.}

\item{path_required}{Indicates whether or not the given TOML file must reference one or more data
files.  It is an error if this condition is not met.  Data files found via
\code{path_guess} are acceptable for this purpose.}

\item{meta}{If \code{TRUE}, return a
\href{https://wellmap.readthedocs.io/en/latest/api/wellmap.Meta.html}{\code{Meta}}
object containing miscellaneous information that was read from the TOML file
but not part of the layout.  This includes (i) a dictionary with all the
key/values pairs present in the TOML file but not part of the layout, (ii) a
set of all the TOML files that were read in the process of loading the
layout from the given \code{toml_path}, (iii) and a \link{Style} object describing how
to plot the layout itself.}

\item{extras}{\href{https://wellmap.readthedocs.io/en/latest/deprecations.html#the-extras-and-report-dependencies-arguments-to-wellmap-load}{Deprecated}.}

\item{report_dependencies}{\href{https://wellmap.readthedocs.io/en/latest/deprecations.html#the-extras-and-report-dependencies-arguments-to-wellmap-load}{Deprecated}.}

\item{on_alert}{A callback to invoke if the given TOML file contains a warning for the user.
The default behavior is to print the warning to the terminal.  If a callback
is provided, it must take two arguments: the path to to the TOML file
containing the alert (string), and the message itself (string).  Note that
this could be called more than once, e.g. if there are included or
concatenated files.}
}
\value{
If neither \code{data_loader} nor \code{merge_cols} were provided:
\itemize{
\item \code{layout} (data frame): Information about the plate layout parsed from the
given TOML file.  The data frame will have a row for each well and a
column for each experimental condition.  In addition, there will be
several columns identifying each well:
\itemize{
\item \emph{plate}: The name of the plate for this well.  This column will not be
present if there are no \verb{[plate]} blocks in the TOML file.
\item \emph{path}: The path to the data file associated with the plate for this
well.  This column will not be present if no data files were referenced
by the TOML file.
\item \emph{well}: The name of the well, e.g. "A1".
\item \emph{well0}: The zero-padded name of the well, e.g. "A01".
\item \emph{row}: The name of the row for this well, e.g. "A".
\item \emph{col}: The name of the column for this well, e.g. "1".
\item \emph{row_i}: The row-index of this well, counting from 0.
\item \emph{col_j}: The column-index of this well, counting from 0.
}
}

If \code{data_loader} was provided but \code{merge_cols} was not:
\itemize{
\item \code{layout} (data frame): See above.
\item \code{data} (data frame): The concatenated result of calling \code{data_loader()} on
every path specified in the given TOML file.  See
\href{https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.concat.html}{\code{pandas.concat()}}
for more information on how the data from different paths are
concatenated.
}

If \code{data_loader} and \code{merge_cols} were both provided:
\itemize{
\item \code{merged} (data frame): The result of merging the \code{layout} and \code{data} data
frames along the columns specified by \code{merge_cols}.  See
\href{https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.merge.html}{\code{pandas.merge()}}
for more details on the merge itself.  The resulting data frame will have
one or more rows for each well (more are possible if there are multiple
data points per well, e.g. a time course), a column for each experimental
condition described in the TOML file, and a column for each kind of data
loaded from the data files.
}

If \code{meta} was requested:
\itemize{
\item \code{meta}: As described above.
}
}
\description{
Parse the given TOML file and return a data frame with a row for each well
and a column for each experimental condition specified in that file.  If the
\code{data_loader} and \code{merge_cols} arguments are provided (which is the most
typical use-case), that data frame will also contain columns for any data
associated with each well.
}
